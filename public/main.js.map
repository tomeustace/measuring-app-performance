{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/basic-timing/basic-timing.component.ts","./src/app/basic-timing/basic-timing.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/highlight.service.ts","./src/app/measure-mark/measure-mark.component.ts","./src/app/measure-mark/measure-mark.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/performance-observer/performance-observer.component.ts","./src/app/performance-observer/performance-observer.component.html","./src/app/performance.service.ts","./src/app/resources/resources.component.ts","./src/app/resources/resources.component.html","./src/app/tachometer/tachometer.component.ts","./src/app/tachometer/tachometer.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, NgModule } from '@angular/core';\nimport { Routes, RouterModule, Resolve } from '@angular/router';\nimport { BasicTimingComponent } from './basic-timing/basic-timing.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MeasureMarkComponent } from './measure-mark/measure-mark.component';\nimport { PerformanceObserverComponent } from './performance-observer/performance-observer.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { TachometerComponent } from './tachometer/tachometer.component';\n\nimport { delay } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyResolver implements Resolve<Observable<string>> {\n  resolve(): Observable<string> {\n    performance.mark('resolved-data-start');\n    return of('Resolved Data').pipe(delay(500));\n  }\n}\n\nconst routes: Routes = [\n  {\n    path: 'dashboard', component: DashboardComponent,\n  },\n  {\n    path: 'basic-timing', component: BasicTimingComponent\n  },\n  {\n    path: 'measure-mark', component: MeasureMarkComponent, data: {name: 'Measure Mark'}, resolve: { message: MyResolver }\n  },\n  {\n    path: 'performance-observer', component: PerformanceObserverComponent\n  },\n  {\n    path: 'tachometer', component: TachometerComponent\n  },\n  {\n    path: 'resources', component: ResourcesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewEncapsulation } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Measuring Web Application Performance - @tomeustace';\n\n  ngOnInit() {\n    performance.mark('start');\n    for (let i = 0; i < 100; i++) {\n      // console.log(\"i: \", i);\n    }\n    performance.mark('stop');\n    performance.measure('my-measure', 'start', 'stop');\n  }\n}\n","\n<app-navigation></app-navigation>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MeasureMarkComponent } from './measure-mark/measure-mark.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HighlightService } from './highlight.service';\nimport { PerformanceService } from './performance.service';\nimport { BasicTimingComponent } from './basic-timing/basic-timing.component';\nimport { TachometerComponent } from './tachometer/tachometer.component';\nimport { PerformanceObserverComponent } from './performance-observer/performance-observer.component';\nimport { ResourcesComponent } from './resources/resources.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    DashboardComponent,\n    MeasureMarkComponent,\n    BasicTimingComponent,\n    TachometerComponent,\n    PerformanceObserverComponent,\n    ResourcesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatButtonModule\n  ],\n  providers: [HighlightService, PerformanceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-timing',\n  templateUrl: './basic-timing.component.html',\n  styleUrls: ['./basic-timing.component.scss']\n})\nexport class BasicTimingComponent implements OnInit {\n\n  performanceTime: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // fix prism display issue by reloading!!\n    if (!localStorage.getItem('reload')) {\n        localStorage.setItem('reload', 'no reload')\n        location.reload()\n      } else {\n        localStorage.removeItem('reload')\n      }\n  }\n\n  runPerformance() {\n    this.performanceTime = undefined;\n    const t0 = performance.now();\n    for (let i = 0; i < this.randomNumber(10000, 100000); i++) {\n      // do stuff\n    }\n    const t1 = performance.now();\n    this.performanceTime = t1 - t0;\n  }\n\n  runConsoleTime() {\n    console.time('time-label');\n    for (let i = 0; i < this.randomNumber(10000, 100000); i++) {\n      // do stuff\n    }\n    console.timeEnd('time-label');\n  }\n\n  randomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n    <mat-grid-tile>\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            console.time & console.timeEnd\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">\nfunction test() {{ '{' }}\n  console.time(\"time-label\");\n  for (let i = 0; i < 1000; i++) {{ '{' }}\n    // do complicated stuff...\n  {{ '}' }}\n  console.timeEnd(\"time-label\");\n{{ '}' }}</code>\n          </pre>\n          <button mat-raised-button (click)=\"runConsoleTime()\">Run</button>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n    <!-- <mat-grid-tile [colspan]=\"1\" [rowspan]=\"2\"> -->\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Performance Web API\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">\nfunction test() {{ '{' }}\n  const t0 = performance.now();\n  for (let i = 0; i < 1000; i++) {{ '{' }}\n    // do complicated stuff...\n  {{ '}' }}\n  const t1 = performance.now();\n  console.log(`time taken $ {{ '{' }}t1 - t0{{ '}' }}`);\n{{ '}' }}</code>\n          </pre>\n          <button mat-raised-button (click)=\"runPerformance()\">Run</button>\n          <p>{{ performanceTime }}</p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile [colspan]=\"2\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Performance Monitor\n          </mat-card-title>\n        </mat-card-header>\n        <p>ctrl + shift + p -> performance monitor</p>\n      <img width=\"90%\" height=\"250px\" src=\"./../../assets/images/performance_monitor.png\" />\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { HighlightService } from '../highlight.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent {\n  // /** Based on the screen size, switch from standard to one column per row */\n  // cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n  //   map(({ matches }) => {\n  //     if (matches) {\n  //       return [\n  //         { title: 'Social', cols: 1, rows: 1 },\n  //         { title: 'Card 2', cols: 1, rows: 1 },\n  //         { title: 'Card 3', cols: 1, rows: 1 },\n  //         { title: 'Card 4', cols: 1, rows: 1 }\n  //       ];\n  //     }\n\n  //     return [\n  //       { title: 'Social', cols: 2, rows: 1 },\n  //       { title: 'Card 2', cols: 1, rows: 1 },\n  //       { title: 'Card 3', cols: 1, rows: 2 },\n  //       { title: 'Card 4', cols: 1, rows: 1 }\n  //     ];\n  //   })\n  // );\n\n  type: string\n\n  constructor(private highlightService: HighlightService) {}\n\n  ngAfterViewInit() {\n    this.highlightService.highlightAll();\n  }\n\n  expand(type: string) {\n    if (this.type === type) {\n      this.type = undefined;\n    } else {\n      this.type = type;\n    }\n  }\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"3\" rowHeight=\"390px\">\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-content>\n          <mat-card-header>\n            <mat-card-title>\n              My Background 🧝‍♂️\n            </mat-card-title>\n          </mat-card-header>\n          <p>Senior Frontend Engineer</p>\n          <p>Angular / Web enthusiast</p>\n          <p>Developing realtime analytics applications</p>\n          <p>Data visualization with d3</p>\n          <p>How I got into Web Performance? Features vs Performance</p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-content>\n          <mat-card-header>\n            <mat-card-title>\n              Housekeeping 🍠\n            </mat-card-title>\n          </mat-card-header>\n          <p>Premature optimization is the root of all evil! <b>(How come?)</b></p>\n          <p>Lighthouse is not part of this talk 🔦 🏡 <b>(Why not?)</b></p>\n          <p>Only measure critical paths</p>\n          <p>Don't measure network requests</p>\n          <p>Do measure algorithms / complex functions</p>\n          <p>Do use WebWorkers where appropriate</p>\n          <p>Random emojis everywhere 👾 </p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Performance Web API 🚄\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n<p><b>MDN:</b><cite> The High Resolution Time standard defines a Performance interface that supports client-side latency measurements within\napplications.</cite></p>\n\n<p>window.performance.getEntries()</p>\n<ul>\n  <li><b>PerformanceMark</b></li>\n  <li><b>PerformanceMeasure</b></li>\n  <li>PerformanceNavigationTiming</li>\n  <li>PerformanceResourceTiming</li>\n  <li>PerformancePaintTiming</li>\n</ul>\n<p>\n  The PerformanceEntry object encapsulates a single performance metric that is part of the performance timeline.\n</p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\">\n      <img style=\"position: absolute; bottom: 350px;\"\n        src=\"https://www.azquotes.com/picture-quotes/quote-if-you-can-not-measure-it-you-can-not-improve-it-lord-kelvin-79-18-55.jpg\" />\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport 'prismjs';\n// import 'prismjs/plugins/toolbar/prism-toolbar';\n// import 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\n// import 'prismjs/components/prism-css';\n// import 'prismjs/components/prism-javascript';\n// import 'prismjs/components/prism-typescript';\n// import 'prismjs/components/prism-scss';\n\ndeclare var Prism: any;\n\n@Injectable({providedIn: 'root'})\nexport class HighlightService {\n    constructor() { }\n\n    highlightAll() {\n        Prism.highlightAll();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HighlightService } from '../highlight.service';\nimport { PerformanceService } from '../performance.service';\n@Component({\n  selector: 'app-measure-mark',\n  templateUrl: './measure-mark.component.html',\n  styleUrls: ['./measure-mark.component.scss']\n})\nexport class MeasureMarkComponent {\n\n  constructor(private route: ActivatedRoute, private highlightService: HighlightService, private performanceService: PerformanceService) {\n    performanceService.startPerformanceObserver(this.constructor.name, ['mark', 'measure']);\n\n    performance.mark('constructor');\n    this.route.data.subscribe(data => {\n      performance.mark('resolved-data-end');\n      performance.measure('resolved-data', 'resolved-data-start', 'resolved-data-end');\n\n      // DON'T USE OUTSIDE OF CHROME, NOT STANDARD API\n      // console.log(\"Used JS Heap Size\", (performance?.memory.usedJSHeapSize / 1048576).toFixed(2) + \"MB\");\n    });\n  }\n\n  ngOnInit() {\n    performance.mark('onInit');\n    let now;\n    for (let i = 0; i < 100000; i++) {\n      now = new Date();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.highlightService.highlightAll();\n    performance.mark('afterViewInit');\n\n    performance.measure('onInit-to-afterViewInit', 'onInit', 'afterViewInit');\n    // performance.measure('constructor-to-viewinit', 'constructor', 'afterViewInit');\n  }\n\n  ngOnDestroy() {\n    this.performanceService.stopPerformanceObserver();\n  }\n\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile>\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            <h2>Creating Marks and Measures 📏 </h2>\n          </mat-card-title>\n\n        </mat-card-header>\n        <mat-card-content>\n          <div>\n            <ul>\n              <li>Create a starting mark - performance.mark('my-start-mark')</li>\n              <li>Create an ending mark - performance.mark('my-end-mark')</li>\n                <ul>\n                  <li>\n                    <p>performance.mark() Creates a timestamp in the browser's performance entry buffer with the given name.</p>\n                  </li>\n                </ul>\n              <li>Create a measure of the marks - performance.measure('my-measure', 'my-start-mark', 'my-end-mark')</li>\n                <ul>\n                  <li>\n                    <p>The measure() method creates a named timestamp in the browser's performance entry buffer between marks, the navigation start time, or the current time.\n                    </p>\n                  </li>\n                </ul>\n            </ul>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Mark & Measure Angular Lifecycle Hooks 🐟\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">\n  performance.mark('onInit');\n  performance.mark('afterViewInit');\n  performance.measure('onInit-to-afterViewInit', 'onInit', 'afterViewInit');\n</code>\n          </pre>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile [colspan]=\"2\" [rowspan]=\"2\">\n      <img src=\"./../../assets/images/onInit-to-afterViewInit.png\" />\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar class=\"heading\">\n      Agenda 🎬\n    </mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"'dashboard'\" [routerLinkActive]=\"['active']\">Intro</a>\n      <a mat-list-item [routerLink]=\"'measure-mark'\" [routerLinkActive]=\"['active']\">Mark & Measure</a>\n      <a mat-list-item [routerLink]=\"'performance-observer'\" [routerLinkActive]=\"['active']\">Performance Observer</a>\n      <a mat-list-item [routerLink]=\"'tachometer'\" [routerLinkActive]=\"['active']\">Tachometer</a>\n      <a mat-list-item [routerLink]=\"'basic-timing'\" [routerLinkActive]=\"['active']\">Inline Timing</a>\n      <a mat-list-item [routerLink]=\"'resources'\" [routerLinkActive]=\"['active']\">Resources</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <div class=\"spacer\">\n        <span>Measuring Web Application Performance</span>\n        <span>@tomeustace</span>\n      </div>\n    </mat-toolbar>\n\n    <router-outlet></router-outlet>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { HighlightService } from '../highlight.service';\nimport { PerformanceService } from '../performance.service';\n\n@Component({\n  selector: 'app-performance-observer',\n  templateUrl: './performance-observer.component.html',\n  styleUrls: ['./performance-observer.component.scss']\n})\nexport class PerformanceObserverComponent implements OnInit {\n\n  constructor(\n    private performanceService: PerformanceService,\n    private highlightService: HighlightService\n    ) {\n    this.performanceService.startPerformanceObserver(this.constructor.name);\n  }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    this.highlightService.highlightAll();\n  }\n\n  ngOnDestroy(): void {\n    this.performanceService.stopPerformanceObserver();\n  }\n\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\"></h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile>\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            PerformanceObserver\n          </mat-card-title>\n\n        </mat-card-header>\n        <mat-card-content>\n          <p>The PerformanceObserver interface is used to observe performance measurement events and be notified of new performance entries as they are recorded in the browser's performance timeline.\n            </p>\n\n            <p>PerformanceObserver.supportedEntryTypes() - show supported entry types</p>\n            <p>PerformanceObserver.observe() - begin observing</p>\n            <p>PerformanceObserver.takeRecords() - empties entries</p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">\n  const observerCallback = list => {{ '{' }}\n          list.getEntries().forEach(entry => {{ '{' }}\n              console.log(` ${{ '{' }}entry.entryType {{ '}' }}: ${{ '{' }} entry.name {{ '}' }}`);\n            {{ '}' }}\n          {{ '}' }});\n        {{ '}' }};\n  this.performanceObserver = new PerformanceObserver(this.observerCallback);\n  const types = ['mark', 'measure', 'navigation', 'resource' ];\n  this.performanceObserver.observe( entryTypes: types );\n</code>\n          </pre>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"2\" [rowspan]=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            PerformanceObserver Entry Types\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n            <pre>\n          <code class=\"language-js\">\n            PerformanceObserver.supportedEntryTypes();\n            //[\n            //    \"element\", Reports load time of elements.\n            //    \"event\", The document's address\n            //    \"first-input\", The time of the first input\n            //    \"largest-contentful-paint\", The time of the largest contentful paint\n            //    \"layout-shift\", The time of the layout shift\n            //    \"longtask\", The time of the long task\n            //    \"mark\", The mark name\n            //    \"measure\", The measure name\n            //    \"navigation\", The time of the navigation\n            //    \"paint\", paint timing (first-paint or first-contentful-paint)\n            //    \"resource\" The resolved URL of the requested resource\n            //]\n\n          </code>\n            </pre>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Injectable } from '@angular/core';\n\nconst allTypes = [\n    \"element\",\n    \"event\",\n    \"first-input\",\n    \"largest-contentful-paint\",\n    \"layout-shift\",\n    \"longtask\",\n    \"mark\",\n    \"measure\",\n    \"navigation\",\n    \"paint\",\n    \"resource\"\n]\n\n@Injectable({providedIn: 'root'})\nexport class PerformanceService {\n  performanceObserver: PerformanceObserver;\n  className: string;\n\n  observerCallback = list => {\n          list.getEntries().forEach(entry => {\n            if (entry.entryType === \"measure\") {\n              console.log(`\n                ${this.className} - %c${entry.entryType}: %c${entry.name}, %cStart: ${entry.startTime}, Duration: ${entry.duration}`,\n                'color: green', 'color: purple', 'color: blue'\n              );\n            } else {\n              console.log(`\n                ${this.className} - %c${entry.entryType}: %c${entry.name}`,\n                'color: green', 'color: purple'\n              );\n            }\n\n          });\n        };\n\n  startPerformanceObserver(className: string, entryTypes?: string[]) {\n    console.log(`${className} PerformanceObserver Started`);\n    this.className = className;\n    if(PerformanceObserver) {\n        this.performanceObserver = new PerformanceObserver(this.observerCallback);\n        const types = entryTypes ?? allTypes;\n        this.performanceObserver.observe({ entryTypes: types });\n    }\n  }\n\n  stopPerformanceObserver() {\n    console.log(`${this.className} PerformanceObserver Started`);\n    this.performanceObserver.disconnect();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"3\" rowHeight=\"390px\">\n    <mat-grid-tile [colspan]=\"3\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Resources 💰\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n\n          <a\n            href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance\">https://developer.mozilla.org/en-US/docs/Web/API/Performance</a>\n          <a\n            href=\"https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\">https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API</a>\n          <a href=\"https://mdn.github.io/dom-examples/performance-apis/perf-api-support.html\">https://mdn.github.io/dom-examples/performance-apis/perf-api-support.html</a>\n          <a href=\"https://wicg.github.io/element-timing/\"></a>\n          <a href=\"https://github.com/Polymer/tachometer\">https://github.com/Polymer/tachometer</a>\n          <a href=\"https://www.brendangregg.com/blog/2018-06-30/benchmarking-checklist.html\">https://www.brendangregg.com/blog/2018-06-30/benchmarking-checklist.html</a>\n          <a\n            href=\"https://nolanlawson.com/2021/09/12/how-to-write-about-web-performance/\">https://nolanlawson.com/2021/09/12/how-to-write-about-web-performance/</a>\n          <a\n            href=\"https://chrome.google.com/webstore/detail/angular-devtools/ienfalfjdbdpebioblfackkekamfmbnh\">https://chrome.google.com/webstore/detail/angular-devtools/ienfalfjdbdpebioblfackkekamfmbnh</a>\n          <a href=\"https://github.com/tomeustace/measuring-app-performance\">https://github.com/tomeustace/measuring-app-performance</a>\n\n          <a href=\"https://country-code.ghost.io/angular-performance-monitoring-with-custom-typescript-decorators-2/\">https://country-code.ghost.io/angular-performance-monitoring-with-custom-typescript-decorators-2/</a>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { HighlightService } from '../highlight.service';\n\n@Component({\n  selector: 'app-tachometer',\n  templateUrl: './tachometer.component.html',\n  styleUrls: ['./tachometer.component.scss']\n})\nexport class TachometerComponent implements OnInit {\n\n  constructor(private highlightService: HighlightService) { }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit() {\n    this.highlightService.highlightAll();\n  }\n\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\"></h1>\n  <mat-grid-list cols=\"3\" rowHeight=\"300px\">\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Tachometer\n          </mat-card-title>\n\n        </mat-card-header>\n        <mat-card-content>\n          <q>\n            Even if you run the same JavaScript, on the same browser, on the same machine, on the same day, you'll still\n            get a different result every time. But if you take enough repeated samples and apply the right statistics,\n            you can reliably identify even tiny differences in runtime.\n          </q>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Running Benchmarks\n          </mat-card-title>\n\n        </mat-card-header>\n        <mat-card-content>\n          <p>Alter builds (A / B) with varying algorithms/packages etc to test against.</p>\n          <ul>\n            <li>ng build --output-path=dist/appA</li>\n            <li>ng build --output-path=dist/appB</li>\n            <li>serve -p 3000, serve -p 3001</li>\n            <li>tachometer --config benchmarks.json</li>\n            <li>load trace logs chrome://tracing</li>\n          </ul>\n          <p>Swap NPM dependencies</p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"3\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            benchmarks.json\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">\n{{ '{' }}\n  \"$schema\": \"https://raw.githubusercontent.com/Polymer/tachometer/master/config.schema.json\",\n  \"sampleSize\": 20,\n  \"benchmarks\": [\n    {{ '{' }}\n      \"name\": \"my-benchmark\",\n      \"url\": \"http://localhost:3000\",\n      \"browser\": {{ '{' }}\n        \"name\": \"chrome\",\n        \"trace\": true,\n      {{ '}' }},\n      \"measurement\": {{ '{' }}\n        \"mode\": \"performance\",\n        \"entryName\": \"my-measure\"\n      {{ '}' }}\n    {{ '}' }},\n    {{ '{' }}\n      \"name\": \"my-benchmark\",\n      \"url\": \"http://localhost:3001\",\n      \"browser\": {{ '{' }}\n        \"name\": \"chrome\",\n        \"trace\": true,\n      {{ '}' }},\n      \"measurement\": {{ '{' }}\n        \"mode\": \"performance\",\n        \"entryName\": \"my-measure\"\n    {{ '}' }},\n  {{ '}' }},\n  ]\n{{ '}' }},\n</code>\n          </pre>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"2\" [rowspan]=\"2\">\n      <img src=\"./../../assets/images/tachometer.png\" />\n      <!-- <img width=\"100%\" height=\"400px\" src=\"./../../assets/images/tachometer.png\" /> -->\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}